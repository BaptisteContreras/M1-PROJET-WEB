---
openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:8080
    description: Generated server url
paths:
  "/login":
    post:
      tags:
        - RestOperationController
      summary: Login
      description: Procédure de login "simple" d'un utilisateur
      operationId: login
      parameters:
        - name: login
          in: query
          required: true
          schema:
            type: string
        - name: password
          in: query
          required: true
          schema:
            type: string
        - name: Origin
          in: header
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successful operation
        '401':
          description: Exception on login
        '404':
          description: Login not found
  "/logout":
    delete:
      tags:
        - RestOperationController
      summary: Logout
      description: Réalise la déconnexion
      operationId: logout
      parameters:
        - name: Authentication
          in: header
          required: true
          schema:
            type: string
        - name: Origin
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
        '401':
          description: Exeption on logout
        '404':
          description: Login not found
  "/authenticate":
    get:
      tags:
        - RestOperationController
      summary: Authenticate
      description: Méthode pour vérifier l'authentifaction d'un utilisateur
      operationId: authenticate
      parameters:
        - name: Authentication
          in: header
          required: true
          schema:
            type: string
        - name: Origin
          in: header
          required: true
          schema:
            type: string
      responses:
        '201':
          description: Connected
        '400':
          description: Login not found or empty
        '401':
          description: Not connected
  "/user/{login}":
    get:
      tags:
        - RestUserController
      summary: Get user
      description: Get a user
      operationId: get
      parameters:
        - name: login
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/User"
            application/xml:
              schema:
                "$ref": "#/components/schemas/User"
            text/html:
              schema:
                "$ref": "#/components/schemas/User"
        '404':
          description: User not found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ModelAndView"
            application/xml:
              schema:
                "$ref": "#/components/schemas/ModelAndView"
            text/html:
              schema:
                "$ref": "#/components/schemas/ModelAndView"
    put:
      tags:
        - RestUserController
      summary: Update user
      description: Update a user
      operationId: update
      parameters:
        - name: login
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpdateUserRequest"
      responses:
        '204':
          description: Successful operation
        '401':
          description: Exception
        '404':
          description: User not found
    delete:
      tags:
        - RestUserController
      summary: Delete user
      description: Delete a user
      operationId: delete
      parameters:
        - name: login
          in: path
          required: true
          schema:
            type: string
        - name: Origin
          in: header
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successful operation
        '404':
          description: Login not found
  "/users":
    get:
      tags:
        - RestUserController
      summary: Get users
      description: Get all users
      operationId: getUsers
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ModelAndView"
            application/xml:
              schema:
                "$ref": "#/components/schemas/ModelAndView"
            text/html:
              schema:
                "$ref": "#/components/schemas/ModelAndView"
    post:
      tags:
        - RestUserController
      summary: Create user
      description: Crate a user
      operationId: create
      parameters:
        - name: Origin
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateUserRequest"
      responses:
        '204':
          description: Successful operation
        '400':
          description: No user
        '401':
          description: User not found
components:
  schemas:
    User:
      type: object
      properties:
        login:
          type: string
        password:
          type: string
          writeOnly: true
        connected:
          type: boolean
    ModelAndView:
      type: object
      properties:
        view:
          "$ref": "#/components/schemas/View"
        model:
          type: object
          additionalProperties:
            type: object
        status:
          type: string
          enum:
            - 100 CONTINUE
            - 101 SWITCHING_PROTOCOLS
            - 102 PROCESSING
            - 103 CHECKPOINT
            - 200 OK
            - 201 CREATED
            - 202 ACCEPTED
            - 203 NON_AUTHORITATIVE_INFORMATION
            - 204 NO_CONTENT
            - 205 RESET_CONTENT
            - 206 PARTIAL_CONTENT
            - 207 MULTI_STATUS
            - 208 ALREADY_REPORTED
            - 226 IM_USED
            - 300 MULTIPLE_CHOICES
            - 301 MOVED_PERMANENTLY
            - 302 FOUND
            - 302 MOVED_TEMPORARILY
            - 303 SEE_OTHER
            - 304 NOT_MODIFIED
            - 305 USE_PROXY
            - 307 TEMPORARY_REDIRECT
            - 308 PERMANENT_REDIRECT
            - 400 BAD_REQUEST
            - 401 UNAUTHORIZED
            - 402 PAYMENT_REQUIRED
            - 403 FORBIDDEN
            - 404 NOT_FOUND
            - 405 METHOD_NOT_ALLOWED
            - 406 NOT_ACCEPTABLE
            - 407 PROXY_AUTHENTICATION_REQUIRED
            - 408 REQUEST_TIMEOUT
            - 409 CONFLICT
            - 410 GONE
            - 411 LENGTH_REQUIRED
            - 412 PRECONDITION_FAILED
            - 413 PAYLOAD_TOO_LARGE
            - 413 REQUEST_ENTITY_TOO_LARGE
            - 414 URI_TOO_LONG
            - 414 REQUEST_URI_TOO_LONG
            - 415 UNSUPPORTED_MEDIA_TYPE
            - 416 REQUESTED_RANGE_NOT_SATISFIABLE
            - 417 EXPECTATION_FAILED
            - 418 I_AM_A_TEAPOT
            - 419 INSUFFICIENT_SPACE_ON_RESOURCE
            - 420 METHOD_FAILURE
            - 421 DESTINATION_LOCKED
            - 422 UNPROCESSABLE_ENTITY
            - 423 LOCKED
            - 424 FAILED_DEPENDENCY
            - 425 TOO_EARLY
            - 426 UPGRADE_REQUIRED
            - 428 PRECONDITION_REQUIRED
            - 429 TOO_MANY_REQUESTS
            - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
            - 451 UNAVAILABLE_FOR_LEGAL_REASONS
            - 500 INTERNAL_SERVER_ERROR
            - 501 NOT_IMPLEMENTED
            - 502 BAD_GATEWAY
            - 503 SERVICE_UNAVAILABLE
            - 504 GATEWAY_TIMEOUT
            - 505 HTTP_VERSION_NOT_SUPPORTED
            - 506 VARIANT_ALSO_NEGOTIATES
            - 507 INSUFFICIENT_STORAGE
            - 508 LOOP_DETECTED
            - 509 BANDWIDTH_LIMIT_EXCEEDED
            - 510 NOT_EXTENDED
            - 511 NETWORK_AUTHENTICATION_REQUIRED
        empty:
          type: boolean
        viewName:
          type: string
        reference:
          type: boolean
        modelMap:
          type: object
          properties:
            empty:
              type: boolean
          additionalProperties:
            type: object
    View:
      type: object
      properties:
        contentType:
          type: string
    UpdateUserRequest:
      required:
        - login
        - password
      type: object
      properties:
        login:
          type: string
        password:
          type: string
    CreateUserRequest:
      required:
        - login
        - password
      type: object
      properties:
        login:
          type: string
        password:
          type: string
